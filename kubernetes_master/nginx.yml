# 创建对应namespace
apiVersion: v1
kind: Namespace
metadata:
  name: nginx-service

---

# API 版本号
apiVersion: apps/v1
# 类型，如：Pod/ReplicationController/Deployment/Service/Ingress
kind: Deployment
metadata:
  # Kind 的名称，pod以后的名字
  name: nginx
  #namespace的名称
  namespace: nginx-service
spec:
  selector:
    matchLabels:
      # 容器标签的名字，发布 Service 时，selector 需要和这里对应
      app: nginx
  # 部署的实例数量
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      # 配置容器，数组类型，说明可以配置多个容器
      containers:
      # 容器名称
      - name: nginx
        # 容器镜像
        image: nginx:v1.0.1
        # 只有镜像不存在时，才会进行镜像拉取
        imagePullPolicy: IfNotPresent
        ports:
        # Pod 端口
        - containerPort: 80
        
        volumeMounts:
        - name: pv-nfs
          #新增子目录
          #subPath: nginxpvc-test
          mountPath: /usr/share/nginx/
        #- name: myhostpath
          #mountPath: /usr/share/nginx/
      dnsConfig:
        nameservers:
        - 114.114.114.114
      volumes:
      - name: pv-nfs
        persistentVolumeClaim:              #指定pvc
          claimName: pvc1
      #- name: myhostpath
        #hostPath:
          #path: /usr/local/nginx
          #type: DirectoryOrCreate
          
        
        #nodeSelector:
        #- kubernetes.io/hostname: node1
        #volumeMounts:
        #- mountPath: /usr/local/nginx
        #name: myhostpath
      #volumes: myhostpath
        #hostPath:
          #path: /usr/local/nginx
          #type: DirectoryOrCreate

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 8080  
    #这个资源(svc)开放的端口
    targetPort: 80
    nodePort: 32000
